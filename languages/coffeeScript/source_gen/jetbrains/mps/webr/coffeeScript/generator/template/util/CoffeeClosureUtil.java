package jetbrains.mps.webr.coffeeScript.generator.template.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class CoffeeClosureUtil {
  public CoffeeClosureUtil() {
  }

  public static int getIndexOfLastExpressionStatement(final SNode _this) {
    int index = -1;
    for (int i = ListSequence.fromList(SLinkOperations.getTargets(_this, "statement", true)).count() - 1; i >= 0; i--) {
      SNode statement = ListSequence.fromList(SLinkOperations.getTargets(_this, "statement", true)).getElement(i);
      if (SNodeOperations.isInstanceOf(statement, "webr.javascript.structure.JsExpressionStatement")) {
        index = i;
        break;
      } else if (!(SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(statement), "webr.javascript.structure.JsStatement") || SNodeOperations.isInstanceOf(statement, "webr.javascript.structure.JsCommentStatement"))) {
        // Not an empty line 
        break;
      }
    }
    return index;
  }
}
