package jetbrains.mps.webr.coffeeScript.structure;

/*Generated by MPS */

import webr.javascript.structure.JsExpression;
import webr.javascript.structure.JsStatementListHolder;
import jetbrains.mps.smodel.SNode;
import webr.javascript.structure.JsType;
import webr.javascript.structure.JsStatementList;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CoffeeClosure extends JsExpression implements JsStatementListHolder {
  public static final String concept = "jetbrains.mps.webr.coffeeScript.structure.CoffeeClosure";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String RETURN_TYPE = "returnType";
  public static final String STATEMENT_LIST = "statementList";
  public static final String PARAMETER = "parameter";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public CoffeeClosure(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(CoffeeClosure.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(CoffeeClosure.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(CoffeeClosure.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(CoffeeClosure.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(CoffeeClosure.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(CoffeeClosure.VIRTUAL_PACKAGE, value);
  }

  public JsType getReturnType() {
    return (JsType) this.getChild(JsType.class, CoffeeClosure.RETURN_TYPE);
  }

  public void setReturnType(JsType node) {
    super.setChild(CoffeeClosure.RETURN_TYPE, node);
  }

  public JsStatementList getStatementList() {
    return (JsStatementList) this.getChild(JsStatementList.class, CoffeeClosure.STATEMENT_LIST);
  }

  public void setStatementList(JsStatementList node) {
    super.setChild(CoffeeClosure.STATEMENT_LIST, node);
  }

  public int getParametersCount() {
    return this.getChildCount(CoffeeClosure.PARAMETER);
  }

  public Iterator<CoffeeParameterDeclaration> parameters() {
    return this.children(CoffeeParameterDeclaration.class, CoffeeClosure.PARAMETER);
  }

  public List<CoffeeParameterDeclaration> getParameters() {
    return this.getChildren(CoffeeParameterDeclaration.class, CoffeeClosure.PARAMETER);
  }

  public void addParameter(CoffeeParameterDeclaration node) {
    this.addChild(CoffeeClosure.PARAMETER, node);
  }

  public void insertParameter(CoffeeParameterDeclaration prev, CoffeeParameterDeclaration node) {
    this.insertChild(prev, CoffeeClosure.PARAMETER, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(CoffeeClosure.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, CoffeeClosure.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, CoffeeClosure.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(CoffeeClosure.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, CoffeeClosure.SMODEL_ATTRIBUTE, node);
  }

  public static CoffeeClosure newInstance(SModel sm, boolean init) {
    return (CoffeeClosure) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.webr.coffeeScript.structure.CoffeeClosure", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CoffeeClosure newInstance(SModel sm) {
    return CoffeeClosure.newInstance(sm, false);
  }
}
