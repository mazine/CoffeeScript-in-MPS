package jetbrains.mps.webr.coffeeScript.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"jetbrains.mps.webr.coffeeScript.structure.CoffeeClosure", "jetbrains.mps.webr.coffeeScript.structure.CoffeeParameterDeclaration"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("jetbrains.mps.webr.coffeeScript.structure.CoffeeClosure", "webr.javascript.structure.JsExpression", false, new String[]{"webr.javascript.structure.JsExpression", "webr.javascript.structure.JsStatementListHolder"}, new String[]{"explicitMultiline"}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("jetbrains.mps.webr.coffeeScript.structure.CoffeeParameterDeclaration", "webr.javascript.structure.JsBaseVariableDeclaration", false, new String[]{"webr.javascript.structure.JsBaseVariableDeclaration"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
