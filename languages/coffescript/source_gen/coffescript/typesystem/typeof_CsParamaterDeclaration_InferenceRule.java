package coffescript.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.smodel.SModelUtil_new;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.project.GlobalScope;

public class typeof_CsParamaterDeclaration_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_CsParamaterDeclaration_InferenceRule() {
  }

  public void applyRule(final SNode csParamaterDeclaration, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (SLinkOperations.getTarget(csParamaterDeclaration, "initializer", true) != null) {
      {
        SNode _nodeToCheck_1029348928467 = csParamaterDeclaration;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1527977838046774286", 0, null);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1527977838046774293", true), (SNode) typeCheckingContext.typeOf(SLinkOperations.getTarget(csParamaterDeclaration, "initializer", true), "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1527977838046774288", true), _info_12389875345);
      }
    } else {
      {
        SNode _nodeToCheck_1029348928467 = csParamaterDeclaration;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1527977838046774302", 0, null);
        typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1527977838046774304", true), (SNode) new typeof_CsParamaterDeclaration_InferenceRule.QuotationClass_mja6gw_a0a0a0a0a().createNode(typeCheckingContext), false, true, _info_12389875345);
      }
    }

    SNode csParameterList = SNodeOperations.getAncestor(csParamaterDeclaration, "coffescript.structure.CsParameterList", true, false);
    for (SNode otherParameterDeclaration : ListSequence.fromList(SLinkOperations.getTargets(csParameterList, "csParamaterDeclaration", true))) {
      if (csParamaterDeclaration != otherParameterDeclaration && SPropertyOperations.getString(csParamaterDeclaration, "variableName").equals(SPropertyOperations.getString(otherParameterDeclaration, "variableName"))) {
        {
          MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(csParamaterDeclaration, "Parameter with the same name has been already declared", "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "5140412041910063520", null, errorTarget);
        }
        {
          MessageTarget errorTarget = new NodeMessageTarget();
          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(otherParameterDeclaration, "Parameter with the same name has been already declared", "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "5982157167539825647", null, errorTarget);
        }
      }
    }

  }

  public String getApplicableConceptFQName() {
    return "coffescript.structure.CsParameterDeclaration";
  }

  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    {
      boolean b = SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
      return new IsApplicableStatus(b, null);
    }
  }

  public boolean overrides() {
    return false;
  }

  public static class QuotationClass_mja6gw_a0a0a0a0a {
    public QuotationClass_mja6gw_a0a0a0a0a() {
    }

    public SNode createNode(final TypeCheckingContext typeCheckingContext) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("webr.javascript.structure.JsAnyType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("webr.javascript.structure.JsAnyType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
