package coffescript.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_CsUnaryOperation_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_CsUnaryOperation_InferenceRule() {
  }

  public void applyRule(final SNode csUnaryOperation, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    SNode operator = SLinkOperations.getTarget(csUnaryOperation, "csUnaryOperator", false);
    if (SLinkOperations.getTarget(operator, "type", true) != null) {
      {
        SNode _nodeToCheck_1029348928467 = csUnaryOperation;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1211992213106", 0, null);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1211992204273", true), (SNode) SLinkOperations.getTarget(operator, "type", true), _info_12389875345);
      }
    }
    if (SLinkOperations.getTarget(operator, "operandType", true) != null) {
      {
        SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(csUnaryOperation, "csExpression", true);
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1211992251696", 0, null);
        typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:4105a9d4-65a3-46de-86a8-c528ce333176(coffescript.typesystem)", "1211992251698", true), (SNode) SLinkOperations.getTarget(operator, "operandType", true), false, true, _info_12389875345);
      }
    }
  }

  public String getApplicableConceptFQName() {
    return "coffescript.structure.CsUnaryOperation";
  }

  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    {
      boolean b = SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
      return new IsApplicableStatus(b, null);
    }
  }

  public boolean overrides() {
    return false;
  }
}
