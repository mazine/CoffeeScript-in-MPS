package coffescript.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import java.util.ArrayList;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_377098314686567916(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SNodeOperations.getAncestors(_context.getNode(), "coffescript.structure.CsFunctionExpression", false)).isEmpty();
  }

  public static boolean baseMappingRule_Condition_377098314686569368(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return ListSequence.fromList(SNodeOperations.getAncestors(_context.getNode(), "coffescript.structure.CsFunctionExpression", false)).isNotEmpty();
  }

  public static boolean baseMappingRule_Condition_377098314686535288(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("?=");
  }

  public static boolean baseMappingRule_Condition_377098314686539280(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("||=") || SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("or=");
  }

  public static boolean baseMappingRule_Condition_377098314686677142(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("&&=") || SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("and=");
  }

  public static boolean baseMappingRule_Condition_377098314686539325(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("if");
  }

  public static boolean baseMappingRule_Condition_377098314686539439(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("unless");
  }

  public static boolean baseMappingRule_Condition_377098314686677090(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("or=");
  }

  public static Object propertyMacro_GetPropertyValue_2125537478022173740(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_2125537478022173752(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_377098314686617680(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_3320097209922638504(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_7482744398118396803(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_7482744398118394873(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBaseVariableDeclaration", false), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_7482744398118396876(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_7482744398118396942(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_5360389499695100880(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_3320097209922671310(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_1182031909992(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBaseVariableDeclaration", false), "variableName");
  }

  public static Object propertyMacro_GetPropertyValue_1183082077735(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csUnaryOperator", false), "operator");
  }

  public static Object propertyMacro_GetPropertyValue_6811022195824361277(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator");
  }

  public static Object propertyMacro_GetPropertyValue_6811022195824361339(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator");
  }

  public static Object propertyMacro_GetPropertyValue_6811022195824321330(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "jsBinaryOperator", false), "operator");
  }

  public static Object propertyMacro_GetPropertyValue_377098314686570915(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "variableName");
  }

  public static boolean ifMacro_Condition_7482744398118391160(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true) != null);
  }

  public static boolean ifMacro_Condition_2125537478022173773(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "initializer", true) != null);
  }

  public static boolean ifMacro_Condition_377098314686617688(final IOperationContext operationContext, final IfMacroContext _context) {
    SNode functionExpression = SNodeOperations.getAncestor(_context.getNode(), "coffescript.structure.CsFunctionExpression", true, false);

    return _context.getNode() != ListSequence.fromList(SNodeOperations.getDescendants(functionExpression, "coffescript.structure.CsVariableDeclaration", false, new String[]{"coffescript.structure.CsFunctionExpression"})).last();

  }

  public static boolean ifMacro_Condition_377098314686617736(final IOperationContext operationContext, final IfMacroContext _context) {
    SNode functionExpression = SNodeOperations.getAncestor(_context.getNode(), "coffescript.structure.CsFunctionExpression", true, false);

    return ListSequence.fromList(SNodeOperations.getDescendants(functionExpression, "coffescript.structure.CsVariableDeclaration", false, new String[]{"coffescript.structure.CsFunctionExpression"})).isNotEmpty();
  }

  public static boolean ifMacro_Condition_377098314686655533(final IOperationContext operationContext, final IfMacroContext _context) {
    {
      SNode csBlock = SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true);
      if (SNodeOperations.isInstanceOf(csBlock, "coffescript.structure.CsBlock")) {
        return false;
      }
    }
    if ((SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true) == null)) {
      return false;
    }
    return true;
  }

  public static boolean ifMacro_Condition_2125537478022165681(final IOperationContext operationContext, final IfMacroContext _context) {
    {
      SNode csExpressionWrapper = SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true);
      if (SNodeOperations.isInstanceOf(csExpressionWrapper, "coffescript.structure.CsExpressionWrapper")) {
        return true;
      }
    }
    {
      SNode csExpression = SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true);
      if (SNodeOperations.isInstanceOf(csExpression, "coffescript.structure.CsExpression")) {
        return true;
      }
    }
    return false;
  }

  public static boolean ifMacro_Condition_7482744398118392360(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true) != null);
  }

  public static boolean ifMacro_Condition_5360389499695042727(final IOperationContext operationContext, final IfMacroContext _context) {
    {
      SNode csReturnStatement = ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "csStatement", true)).last();
      if (SNodeOperations.isInstanceOf(csReturnStatement, "coffescript.structure.CsReturnStatement")) {
        return false;
      }
    }
    return true;
  }

  public static boolean ifMacro_Condition_5360389499695062300(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SNodeOperations.getPrevSibling(_context.getNode()) != null);
  }

  public static boolean ifMacro_Condition_1180636593637(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SNodeOperations.getPrevSibling(_context.getNode()) != null);
  }

  public static boolean ifMacro_Condition_7482744398118397044(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "initializer", true) != null);
  }

  public static boolean ifMacro_Condition_5360389499695100888(final IOperationContext operationContext, final IfMacroContext _context) {
    SNode topLevelStatementsList = SNodeOperations.getAncestor(_context.getNode(), "webr.javascript.structure.SourceElementList", false, false);

    return _context.getNode() != ListSequence.fromList(SNodeOperations.getDescendants(topLevelStatementsList, "coffescript.structure.CsVariableDeclaration", false, new String[]{"coffescript.structure.CsFunctionExpression"})).last();

  }

  public static boolean ifMacro_Condition_5360389499695100921(final IOperationContext operationContext, final IfMacroContext _context) {
    SNode topLevelStatementsList = SNodeOperations.getAncestor(_context.getNode(), "webr.javascript.structure.SourceElementList", false, false);

    return _context.getNode() == ListSequence.fromList(SNodeOperations.getDescendants(topLevelStatementsList, "coffescript.structure.CsVariableDeclaration", false, new String[]{"coffescript.structure.CsFunctionExpression"})).first();
  }

  public static boolean ifMacro_Condition_5360389499695062391(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SNodeOperations.getPrevSibling(_context.getNode()) != null);
  }

  public static boolean ifMacro_Condition_6811022195824361298(final IOperationContext operationContext, final IfMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals("<<");
  }

  public static boolean ifMacro_Condition_6811022195824361349(final IOperationContext operationContext, final IfMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator").equals(">>");
  }

  public static boolean ifMacro_Condition_6811022195824323197(final IOperationContext operationContext, final IfMacroContext _context) {
    String operator = SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "csBinaryOperator", false), "operator");
    return operator != "<<" && operator != ">>";
  }

  public static SNode sourceNodeQuery_377098314686535424(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686535433(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686535443(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686535452(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539243(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539252(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539271(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686677117(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686677126(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686677135(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539418(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539427(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539515(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686539524(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686677073(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_377098314686677082(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_1218552257240(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csParameterList", true);
  }

  public static SNode sourceNodeQuery_2125537478022173761(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "initializer", true);
  }

  public static SNode sourceNodeQuery_4721414232346901448(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csFunctionBlock", true);
  }

  public static SNode sourceNodeQuery_1183043651652(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_166660414280913803(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "csStatement", true)).last();
  }

  public static SNode sourceNodeQuery_1184792294855(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "jsExpression", true);
  }

  public static SNode sourceNodeQuery_2670125005527837373(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csExpression", true);
  }

  public static SNode sourceNodeQuery_1178479616396(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csExpression", true);
  }

  public static SNode sourceNodeQuery_5360389499695062364(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_7482744398118396990(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "initializer", true);
  }

  public static SNode sourceNodeQuery_3320097209922657223(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csVariableDeclaration", true);
  }

  public static SNode sourceNodeQuery_537832518926492729(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csInitializer", true);
  }

  public static SNode sourceNodeQuery_5360389499695062401(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_1183082061440(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csExpression", true);
  }

  public static SNode sourceNodeQuery_6811022195824232376(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_6811022195824232385(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }

  public static SNode sourceNodeQuery_2125537478022180831(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "csExpression", true);
  }

  public static Iterable sourceNodesQuery_2125537478022173717(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "coffescript.structure.CsParameterList", false, new String[]{})).first(), "csParamaterDeclaration", true);
  }

  public static Iterable sourceNodesQuery_377098314686617713(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    SNode functionExpression = SNodeOperations.getAncestor(_context.getNode(), "coffescript.structure.CsFunctionExpression", true, false);

    return SNodeOperations.getDescendants(functionExpression, "coffescript.structure.CsVariableDeclaration", false, new String[]{"coffescript.structure.CsFunctionExpression"});

  }

  public static Iterable sourceNodesQuery_1183043638430(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> csStatements = ListSequence.fromList(new ArrayList<SNode>());
    ListSequence.fromList(csStatements).addSequence(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "csStatement", true)));
    ListSequence.fromList(csStatements).removeLastElement();
    return csStatements;
  }

  public static Iterable sourceNodesQuery_5360389499695062292(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "csArgList", true);
  }

  public static Iterable sourceNodesQuery_1184872616136(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "csParamaterDeclaration", true);
  }

  public static Iterable sourceNodesQuery_7482744398118396858(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "csParamaterDeclaration", true);
  }

  public static Iterable sourceNodesQuery_5360389499695100897(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    SNode topLevelStatementsList = SNodeOperations.getAncestor(_context.getNode(), "webr.javascript.structure.SourceElementList", false, false);

    return SNodeOperations.getDescendants(topLevelStatementsList, "coffescript.structure.CsVariableDeclaration", false, new String[]{"coffescript.structure.CsFunctionExpression"});

  }

  public static Iterable sourceNodesQuery_5360389499695062383(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "csExpression", true);
  }
}
