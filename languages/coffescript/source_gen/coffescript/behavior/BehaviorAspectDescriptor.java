package coffescript.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"coffescript.structure.CsArgList", "coffescript.structure.CsArrayExpression", "coffescript.structure.CsBinaryOperation", "coffescript.structure.CsBinaryOperator", "coffescript.structure.CsBlock", "coffescript.structure.CsExpressionStatement", "coffescript.structure.CsExpressionWrapper", "coffescript.structure.CsFunctionExpression", "coffescript.structure.CsIfExpression", "coffescript.structure.CsInitVariableExpression", "coffescript.structure.CsOperatorList", "coffescript.structure.CsParameterDeclaration", "coffescript.structure.CsParameterList", "coffescript.structure.CsParameterReference", "coffescript.structure.CsParenthesesExpression", "coffescript.structure.CsPriorityGroup", "coffescript.structure.CsReturnStatement", "coffescript.structure.CsSplatsParameterDeclaration", "coffescript.structure.CsUnaryOperation", "coffescript.structure.CsUnaryOperator", "coffescript.structure.CsVariableDeclaration", "coffescript.structure.CsVariableReference"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 7:
        return new CsFunctionExpression_BehaviorDescriptor();
      case 4:
        return new CsBlock_BehaviorDescriptor();
      case 16:
        return new CsReturnStatement_BehaviorDescriptor();
      case 6:
        return new CsExpressionWrapper_BehaviorDescriptor();
      case 5:
        return new CsExpressionStatement_BehaviorDescriptor();
      case 20:
        return new CsVariableDeclaration_BehaviorDescriptor();
      case 11:
        return new CsParameterDeclaration_BehaviorDescriptor();
      case 12:
        return new CsParameterList_BehaviorDescriptor();
      case 21:
        return new CsVariableReference_BehaviorDescriptor();
      case 13:
        return new CsParameterReference_BehaviorDescriptor();
      case 1:
        return new CsArrayExpression_BehaviorDescriptor();
      case 0:
        return new CsArgList_BehaviorDescriptor();
      case 2:
        return new CsBinaryOperation_BehaviorDescriptor();
      case 9:
        return new CsInitVariableExpression_BehaviorDescriptor();
      case 17:
        return new CsSplatsParameterDeclaration_BehaviorDescriptor();
      case 8:
        return new CsIfExpression_BehaviorDescriptor();
      case 18:
        return new CsUnaryOperation_BehaviorDescriptor();
      case 3:
        return new CsBinaryOperator_BehaviorDescriptor();
      case 19:
        return new CsUnaryOperator_BehaviorDescriptor();
      case 10:
        return new CsOperatorList_BehaviorDescriptor();
      case 15:
        return new CsPriorityGroup_BehaviorDescriptor();
      case 14:
        return new CsParenthesesExpression_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
