package coffescript.structure;

/*Generated by MPS */

import webr.javascript.structure.FormalParameterList;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CsParameterList extends FormalParameterList {
  public static final String concept = "coffescript.structure.CsParameterList";
  public static final String CS_PARAMATER_DECLARATION = "csParamaterDeclaration";

  public CsParameterList(SNode node) {
    super(node);
  }

  public int getCsParamaterDeclarationsCount() {
    return this.getChildCount(CsParameterList.CS_PARAMATER_DECLARATION);
  }

  public Iterator<CsParameterDeclaration> csParamaterDeclarations() {
    return this.children(CsParameterDeclaration.class, CsParameterList.CS_PARAMATER_DECLARATION);
  }

  public List<CsParameterDeclaration> getCsParamaterDeclarations() {
    return this.getChildren(CsParameterDeclaration.class, CsParameterList.CS_PARAMATER_DECLARATION);
  }

  public void addCsParamaterDeclaration(CsParameterDeclaration node) {
    this.addChild(CsParameterList.CS_PARAMATER_DECLARATION, node);
  }

  public void insertCsParamaterDeclaration(CsParameterDeclaration prev, CsParameterDeclaration node) {
    this.insertChild(prev, CsParameterList.CS_PARAMATER_DECLARATION, node);
  }

  public static CsParameterList newInstance(SModel sm, boolean init) {
    return (CsParameterList) SModelUtil_new.instantiateConceptDeclaration("coffescript.structure.CsParameterList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CsParameterList newInstance(SModel sm) {
    return CsParameterList.newInstance(sm, false);
  }
}
