package coffescript.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CsParameterDeclaration extends CsBaseVariableDeclaration {
  public static final String concept = "coffescript.structure.CsParameterDeclaration";
  public static final String OPTIONAL = "optional";
  public static final String INITIALIZER = "initializer";

  public CsParameterDeclaration(SNode node) {
    super(node);
  }

  public boolean getOptional() {
    return this.getBooleanProperty(CsParameterDeclaration.OPTIONAL);
  }

  public void setOptional(boolean value) {
    this.setBooleanProperty(CsParameterDeclaration.OPTIONAL, value);
  }

  public CsExpression getInitializer() {
    return (CsExpression) this.getChild(CsExpression.class, CsParameterDeclaration.INITIALIZER);
  }

  public void setInitializer(CsExpression node) {
    super.setChild(CsParameterDeclaration.INITIALIZER, node);
  }

  public static CsParameterDeclaration newInstance(SModel sm, boolean init) {
    return (CsParameterDeclaration) SModelUtil_new.instantiateConceptDeclaration("coffescript.structure.CsParameterDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CsParameterDeclaration newInstance(SModel sm) {
    return CsParameterDeclaration.newInstance(sm, false);
  }
}
