package coffescript.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CsArgList extends BaseConcept {
  public static final String concept = "coffescript.structure.CsArgList";
  public static final String CS_EXPRESSION = "csExpression";

  public CsArgList(SNode node) {
    super(node);
  }

  public int getCsExpressionsCount() {
    return this.getChildCount(CsArgList.CS_EXPRESSION);
  }

  public Iterator<CsExpression> csExpressions() {
    return this.children(CsExpression.class, CsArgList.CS_EXPRESSION);
  }

  public List<CsExpression> getCsExpressions() {
    return this.getChildren(CsExpression.class, CsArgList.CS_EXPRESSION);
  }

  public void addCsExpression(CsExpression node) {
    this.addChild(CsArgList.CS_EXPRESSION, node);
  }

  public void insertCsExpression(CsExpression prev, CsExpression node) {
    this.insertChild(prev, CsArgList.CS_EXPRESSION, node);
  }

  public static CsArgList newInstance(SModel sm, boolean init) {
    return (CsArgList) SModelUtil_new.instantiateConceptDeclaration("coffescript.structure.CsArgList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CsArgList newInstance(SModel sm) {
    return CsArgList.newInstance(sm, false);
  }
}
