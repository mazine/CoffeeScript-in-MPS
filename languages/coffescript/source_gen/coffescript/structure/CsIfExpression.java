package coffescript.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CsIfExpression extends BaseConcept {
  public static final String concept = "coffescript.structure.CsIfExpression";
  public static final String CPR_Then = "then";
  public static final String CPR_Else = "else";
  public static final String CONDITION = "condition";
  public static final String THEN_BLOCK = "thenBlock";
  public static final String ELSE_BLOCK = "elseBlock";
  public static final String ELSE_IF_BLOCK = "elseIfBlock";

  public CsIfExpression(SNode node) {
    super(node);
  }

  public CsExpression getCondition() {
    return (CsExpression) this.getChild(CsExpression.class, CsIfExpression.CONDITION);
  }

  public void setCondition(CsExpression node) {
    super.setChild(CsIfExpression.CONDITION, node);
  }

  public CsFunctionBlock getThenBlock() {
    return (CsFunctionBlock) this.getChild(CsFunctionBlock.class, CsIfExpression.THEN_BLOCK);
  }

  public void setThenBlock(CsFunctionBlock node) {
    super.setChild(CsIfExpression.THEN_BLOCK, node);
  }

  public CsFunctionBlock getElseBlock() {
    return (CsFunctionBlock) this.getChild(CsFunctionBlock.class, CsIfExpression.ELSE_BLOCK);
  }

  public void setElseBlock(CsFunctionBlock node) {
    super.setChild(CsIfExpression.ELSE_BLOCK, node);
  }

  public int getElseIfBlocksCount() {
    return this.getChildCount(CsIfExpression.ELSE_IF_BLOCK);
  }

  public Iterator<CsFunctionBlock> elseIfBlocks() {
    return this.children(CsFunctionBlock.class, CsIfExpression.ELSE_IF_BLOCK);
  }

  public List<CsFunctionBlock> getElseIfBlocks() {
    return this.getChildren(CsFunctionBlock.class, CsIfExpression.ELSE_IF_BLOCK);
  }

  public void addElseIfBlock(CsFunctionBlock node) {
    this.addChild(CsIfExpression.ELSE_IF_BLOCK, node);
  }

  public void insertElseIfBlock(CsFunctionBlock prev, CsFunctionBlock node) {
    this.insertChild(prev, CsIfExpression.ELSE_IF_BLOCK, node);
  }

  public static CsIfExpression newInstance(SModel sm, boolean init) {
    return (CsIfExpression) SModelUtil_new.instantiateConceptDeclaration("coffescript.structure.CsIfExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CsIfExpression newInstance(SModel sm) {
    return CsIfExpression.newInstance(sm, false);
  }
}
