package coffescript.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CsOperatorList extends BaseConcept {
  public static final String concept = "coffescript.structure.CsOperatorList";
  public static final String CS_UNARY_OPERATOR = "csUnaryOperator";
  public static final String CS_PRIORITY_GROUP = "csPriorityGroup";

  public CsOperatorList(SNode node) {
    super(node);
  }

  public int getCsUnaryOperatorsCount() {
    return this.getChildCount(CsOperatorList.CS_UNARY_OPERATOR);
  }

  public Iterator<CsUnaryOperator> csUnaryOperators() {
    return this.children(CsUnaryOperator.class, CsOperatorList.CS_UNARY_OPERATOR);
  }

  public List<CsUnaryOperator> getCsUnaryOperators() {
    return this.getChildren(CsUnaryOperator.class, CsOperatorList.CS_UNARY_OPERATOR);
  }

  public void addCsUnaryOperator(CsUnaryOperator node) {
    this.addChild(CsOperatorList.CS_UNARY_OPERATOR, node);
  }

  public void insertCsUnaryOperator(CsUnaryOperator prev, CsUnaryOperator node) {
    this.insertChild(prev, CsOperatorList.CS_UNARY_OPERATOR, node);
  }

  public int getCsPriorityGroupsCount() {
    return this.getChildCount(CsOperatorList.CS_PRIORITY_GROUP);
  }

  public Iterator<CsPriorityGroup> csPriorityGroups() {
    return this.children(CsPriorityGroup.class, CsOperatorList.CS_PRIORITY_GROUP);
  }

  public List<CsPriorityGroup> getCsPriorityGroups() {
    return this.getChildren(CsPriorityGroup.class, CsOperatorList.CS_PRIORITY_GROUP);
  }

  public void addCsPriorityGroup(CsPriorityGroup node) {
    this.addChild(CsOperatorList.CS_PRIORITY_GROUP, node);
  }

  public void insertCsPriorityGroup(CsPriorityGroup prev, CsPriorityGroup node) {
    this.insertChild(prev, CsOperatorList.CS_PRIORITY_GROUP, node);
  }

  public static CsOperatorList newInstance(SModel sm, boolean init) {
    return (CsOperatorList) SModelUtil_new.instantiateConceptDeclaration("coffescript.structure.CsOperatorList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CsOperatorList newInstance(SModel sm) {
    return CsOperatorList.newInstance(sm, false);
  }
}
